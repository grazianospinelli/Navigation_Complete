NELLA PAGINA DI CREAZIONE ACCOUNT VANNO RIPORTATI I TERMINI DI ACCETTAZIONE CONDIZIONI E PRIVACY

ogni utente ha la sua tabella con impegni e date
ogni utente ha una sua tabella date con solo le date impegnate, 
se nella tabella non è presente la data richiesta, allora l'utente è libero.
L'utente ha un calendario con tutti gli impegni
In un giorno determinato l'utente deve poter dire al sistema che è impegnato (nobrook.com)
L'utente in Lista impegni può aggiungere un impegno personale "campo note" sul DB commitments
Lista Impegni è fatto tipo a bottoni Modali dove su ogni bottone (di colore verdino) c'è la data,
una background image di contorno completa la schermata. Schiacciando il bottone e aprendo il modale, 
si va nei dettagli della giornata. 
Nella schermata iniziale c'è anche un bottone + che consente di aggiungere altri impegni con data.
Usare react-native-action-button
In caso di aggiunte o cancellazioni di date l'array locale va aggiornato solo se il DB remoto 
è stato aggiornato con successo !! In caso di aggiunta devo anche riscaricare il DB impegni in locale, 
per avere a disposizione gli indici delle date in caso di cancellazione delle date appena introdotte manualmente.
Prima di fare upload impegni metto lo stato di loading in true e 
quando e se il DB update va a buon fine faccio la chiamata di this.fetchData() 
in cui posso riscaricare l'array da remoto e in cui si reimposta lo stato di loading a false 
e abbiamo lo stato dell'array aggiornato.
fd6d4830-a7af-41a0-b0a6-5793aabab423   <- codice impegno personale


Le richieste in attesa ricevute dall'utente scadono se la data sistema > data richiesta
oppure se la sala chiude la squadra -> questo fa scomparire la richiesta (aggiornamento dati sul cell!)
Se un utente accetta l'offerta, si elimina il record dalla tabella joboffer, 
e tutti gli altri con la stessa data ma di altre sale, e si mette in commitments,
se l'utente rifiuta si elimina il record dalla tabella joboffer ma potrebbe ritornare la richiesta,
se l'utente lascia in attesa un'offerta, quando la sala invia richieste, si fa un controllo in tabella joboffer 
e non si reinvia l'offerta per quell'utente! (LA NUOVA OFFERTA SOVRASCRIVE LA VECCHIA)


ogni sala ha la sua tabella annuale con date e per ogni data quante persone ci sono

query della sala: dammi tutti gli utenti di quella provincia che sono liberi in quella data
quindi fai prima la query per raccogliere tutti gli uuid di quella provincia. 
Per ogni uuid entra in tabella calendario_impegni_di_quell_uuid e cerca se c'è la data. 
Se non c'è allora l'utente è libero.

Selezionare tutti gli users liberi il 01/05/2019 di Putignano
SELECT UID FROM users WHERE uuid NOT IN (SELECT comUserUUID FROM commitments WHERE comDate='2019-05-01') 
AND city='Putignano'


Quando la data attuale sistema è maggiore delle date riportate nella tabella offerte di lavoro, 
le offerte vecchie vengono automaticamente cancellate.

Nel Drawer mancano istruzioni(swiper) - Offerte in Attesa - Meme OCCCA? - Consiglio del giorno

ISTRUZIONI PER IL LISTATO:
Creare ed editare la lista dei file da stampare:
da terminale nella cartella progetto:
git ls-tree -r master --name-only  
mettere la lista in list.txt

In PowerShell:
Get-ChildItem -Path .\ -Name > list.txt
Get-Content .\list.txt | Foreach-Object { echo "// $_"; echo "`n"; type $_; echo "`n"; echo "// __________________________________________________________________";echo "`n"; } > summa.js

RECAP INSTALLAZIONE APP
Avviare prompt del DOC come amministratore:
C:\WINDOWS\system32>cd c:\Users\Graziano\ExtraStaff
c:\Users\Graziano\ExtraStaff>adb devices
c:\Users\Graziano\ExtraStaff>adb reverse tcp:8081 tcp:8081
c:\Users\Graziano\ExtraStaff>react-native start --reset-cache
PER RICOMPILARE:
>react-native run-android
Ogni volta che si installa una nuova libreria bisogna ricompilare l'app
Per fare il reload dal cell bisogna scuoterlo e scegliare RELOAD dal menù che compare

Modificato Android.manifest.xml con:
<activity android:name=".MainActivity" _android:launchMode="singleTask"_ ... /> invece di "singleTop"

__________________________________________________________________

UPGRADE DA VERSIONE 0.57.5 A 0.59.1
seguita la guida: https://www.youtube.com/watch?v=b15qTD9HXa8

rimossi:
react-native-card-flip
react-native-gifted-form
rn-fetch-blob

npm install react-native@0.59.1 --save
react-native upgrade --legacy

inizializzato a parte un progetto 0.59.1 e confrontati i file principali col vecchio

modificato C:\Users\Graziano\ExtraStaff\android\gradle\wrapper\gradle-wrapper.properties
inserendo gradle-5.1.1-all.zip
commentato in build gradle task wrapper
aggiornato Lottie alla versione 2.6.0

ricompilato tutto ma dava problemi non trovando il file index alla partenza. 
lanciato in finestra a parte react-native start -- --reset-cache
e riavviata l'applicazione da cellulare
__________________________________________________________________

PER REIMPOSTARE METRO BUNDLER DOPO LA REINSTALLAZIONE DI node_modules

Quando per risolvere conflitti si cancella la cartella node_modules
e poi si fa npm install per reinstallare tutti i moduli presenti in package.json 

quando al terminde della reinstallazione dell cartella node_modules si fa l'istruzione:
react-native start --reset-cache
se da error Invalid regular expression si modifica il file:
\node_modules\metro-config\src\defaults\blacklist.js 
e si cambia il codice seguente:
var sharedBlacklist = [
    /node_modules[/\\]react[/\\]dist[/\\].*/,
con 
    /node_modules[\/\\]react[\/\\]dist[\/\\].*/,

__________________________________________________________________

PER LA PUBBLICAZIONE SU PLAY STORE 
seguita la guida:
https://archive.reactnative.dev/docs/0.57/signed-apk-android

cd android
gradlew.bat bundleRelease to generate an app bundle (.aab file) 
gradlew.bat clean per ripartire da zero
To install a release on your emulator, use: 
react-native run-android --variant=release
gradlew assembleRelease to generate an apk (.apk file). da errore però

per aggiornare le API per pubblicazione alla ver. 29:
https://www.reactnativeschool.com/how-to-upgrade-react-native-app-to-api-level-29
aggiornare android/build.gradle
compileSdkVersion era 27
targetSdkVersion era 26

buildscript {
    ext {
        buildToolsVersion = "28.0.3"
        minSdkVersion = 16
        compileSdkVersion = 29
        targetSdkVersion = 29
    }
    // ...
}

Aperto Android studio sulla cartella android dentro ExtraStaff.
Da Android Studio->Tools->System Settings->Android SDK->Android 10->Spunta su Show Package Detail
Spunta per scaricare su: SDK Platform 29, Source Android 29, Intel x86 Atom_64
Aggiornato progetto da File-> Sync project with Gradle.

OPZIONALE
build->generate signed apk
si blocca dicendo:
Generating signed Bundle requires you to update Android Gradle plugin to version 3.2.0
Richiesto update su Android Studio
Aggiornato progetto da File-> Sync project with Gradle.

gradlew.bat bundleRelease da terminale
Il file si trova in ExtraStaff\android\app\build\outputs\bundle\release

la generazione del bundle e dell'APK non funziona in fase release
gradlew assembleRelease per generare apk (.apk file) da errore risolto 
modificando build.gradle di react-native-image-picker aggiornato a versione 29 

L'App non parte perchè non iclude nel bundleRelease il file index.android.bundle che si genera con il comando:
yarn react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle
una volta generato si va nella cartella android e si da il comando:
gradlew.bat assembleRelease

Quando Android Studio aggiorna le versioni di Gradle Plugin e non compila più
bisogna rimuovere c:\users\Graziano\.gradle
rimosso anche AppData\local\Android
Reinstallato Android Studio

RILASCIO NUOVE VERSIONI 
Le nuove release devono avere versionCode e versionName crescenti e differenti dalle vecchie release per il Play Store.
Si aggiornano nel file ExtraStaff\android\app\build.gradle nella sezione android {...defaultConfig {} }
cd android
gradlew.bat clean
del android/app/src/main/assets/index.android.bundle
yarn react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle
gradlew.bat assembleRelease
gradlew.bat bundleRelease

Prelevare la bundleRelease da C:\Users\Graziano\ExtraStaff\android\app\build\outputs\bundle\release
Caricare la bundleRelease su Google Play Console al link:
https://play.google.com/console/u/0/developers/5986304918028995690/app/4974245147905713371/tracks/internal-testing
Crea nuova release in alto a DX
Caricare e Salvare in basso a DX
Fare Controllo della release in basso a DX
Verificare che l'app sia messa effettivamente nei test chiusi
Fare promuovi in Produzione
___________________________________________________________________

INSTALLATI NUOVI MODULI COMMUNITY:
npm install -S @react-native-community/async-storage@1.7.1
react-native link @react-native-community/async-storage

Quando viene installata un nuovo modulo
i suoi sorgenti finiscono in node_modules con una sua cartella android e suoi file gradle per la compilazione in fase finale
se si effettua il linking vengono modificati i file:
1 - android\settings.gradle
include ':@react-native-community_async-storage'
project(':@react-native-community_async-storage').projectDir = new File(rootProject.projectDir, '../node_modules/@react-native-community/async-storage/android')

2 - android\app\build.gradle
dependencies {    
    implementation project(':@react-native-community_async-storage')

3 - android\app\src\main\java\com\firemess\MainApplication.java
import com.reactnativecommunity.asyncstorage.AsyncStoragePackage;
return Arrays.<ReactPackage>asList(       
            new AsyncStoragePackage(),
L'import viene fatto usando il nome package contenuto nel file: 
node_modules\@react-native-community\async-storage\android\src\main\AndroidManifest.xml
che in questo caso è com.reactnativecommunity.asyncstorage seguito da . e da un modulo .java presente nella cartella sottostante \java\com\..
node_modules\@react-native-community\async-storage\android\src\main\java\com\reactnativecommunity\asyncstorage\AsyncStoragePackage.java
